install.packages(c("knitr", "markdown", "swirl"))
install.packages("pdflatex")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
anipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
V <- c(245, 222, 580, 320, 69, 12, 10, 8, 33, 15, 25, 989, 63, 22, 296, 333);
min(V)
max(V)
range(V)
var(V)
install.packages(c("BradleyTerry2", "car", "caret", "class", "codetools", "CORElearn", "devtools", "digest", "forecast", "Formula", "highr", "Hmisc", "httr", "jsonlite", "kernlab", "KernSmooth", "knitr", "manipulate", "MASS", "Matrix", "mgcv", "minqa", "rattle", "RColorBrewer", "Rcpp", "RcppEigen", "RCurl", "reshape2", "rmarkdown", "rpart.plot", "rstudioapi", "shiny", "swirl", "testthat", "timeDate", "timeSeries", "tseries"))
devtools::install_github('rstudio/rmarkdown')
V <- c(245, 222, 580, 320, 69, 12, 10, 8, 33, 15, 25, 989, 63, 22, 296, 333);
V1 <- V
v1
V1
V
V1[4]
V1[5]
V1 <- V[1:4]
V1
V1 <- c(NA)
V1
V1 <- V[1:4]
V1[5] <- NA
V1
V1 <- append(V[5:8])
?append
append(V,NA, after=4)
V1 <- append(V,NA, after=4)
V1
V1 <- append(V,NA, after=9)
V1
V1 <- append(append(V,NA, after=4), NA, 9)
V1
V
V2 <- V1[!is.na]
V2 <- V1[!is.na(V1)]
V2
M <- matrix(V,4,4)
M
?matrix
M2 <- matrix(V,4,4, byrow=TRUE)
M
M2
sum(M)
?sum
sum(M[,1])
sum(M[,2])
sum(M[,3])
sum(M[,4])
sum(M[,5])
sum(M[1,])
sum(M[2,])
sum(M[2,])
sum(M[3,])
sum(M[4,])
?for
''
nrows(M)
nrow(M)
i=1;
while (i <= nrow(M))
{print('Sum of row' i);}
{print('Sum of row i'); sum(M[1,]; i <- i+1;)}
{print('Sum of row i'); sum(M[1,]); i <- i+1;)}
{print('Sum of row i'); sum(M[i,]); i <- i+1;)}
{print('Sum of row i'); sum(M[i,]); i <- i+1;}
{s <- sum(M[i,]); i <- i+1;print('Sum of row i' s); }
{s <- sum(M[i,]); i <- i+1;print('Sum of row'); i; s; }
while (i <= nrow(M))
{s <- sum(M[i,]); i <- i+1;print('Sum of row'); i; s; }
nrow(M)
i
i<-1
while (i <= nrow(M))
{s <- sum(M[i,]); i <- i+1;print('Sum of row'); i; s; }
i<-1
while (i <= nrow(M))
{s <- sum(M[i,]); i <- i+1;print('Sum of row'); print(i); print(s); }
i<-1
while (i <= nrow(M))
{s <- sum(M[i,]); i <- i+1;print('Sum of row'+i+' is '+s); }
?print
s
i
l <- 'Sum of row'+i+' is '+s
i<-1
while (i <= nrow(M))
{s <- sum(M[i,]); i <- i+1;print(cat('Sum of row',i,' is ',s)); }
{s <- sum(M[i,]); i <- i+1;print(cat('Sum of row',i,' is ',s, '.')); }
i<-1
while (i <= nrow(M))
{s <- sum(M[i,]); print(cat('Sum of row',i,' is ',s, '.'));i <- i+1;}
M
paste('Sum of ',i)
i<-1
while (i <= nrow(M))
{s <- sum(M[i,]); print(paste('Sum of row',i,' is ',s, '.'));i <- i+1;}
i<-1
while (i <= nrow(M))
{s <- sum(M[i,]); print(cat(paste('Sum of row',i,' is ',s, '.')));i <- i+1;}
?cat
i<-1
while (i <= nrow(M))
{s <- sum(M[i,]); cat('Sum of row',i,' is ',s, '.');i <- i+1;}
i<-1
while (i <= nrow(M))
{s <- sum(M[i,]); cat('Sum of row',i,' is ',s, '.\n');i <- i+1;}
lapply
?lapply
?apply
apply(V,2,max)
V
apply(M,2,max)
M
sapply(M,2,max)
lapply(M,2,max)
mean(apply(M,2,max))
apply(M,2,max(!is.na))
apply(M,2,is.na))
apply(M,2,is.na)
apply(apply(M,2,is.na),2,max)
apply(apply(M,2,!is.na),2,max)
apply(apply(M,2,FUN='!is.na'),2,max)
apply(apply(M,2,FUN='!is.na'),2,max)
M[apply(M,2,is.na)]
x <- c(1, 30, NA, 200, 800)
max(x)
min(x)
is.na(x)
x[!is.na(x)]
apply(M,2,is.na)
M[apply(M,c(1,2), is.na)]
N <- apply(M,c(1,2),is.na)
N
m[N]
M[N]
N <- apply(M,c(1,2),!is.na)
M
apply(M,2)
apply(M,2, vector)
apply(M,2, c)
ls()
x
max(is.na(x))
is.na(x)
max(x[is.na(x)])
max(x[!is.na(x)])
M
apply(M,2,function(x) max(x!is.na(x)))
apply(M,2,function(x) max(x[!is.na(x)]))
maxcol_mean <- function(N) apply(N,2,function(x) mean(max(x[!is.na]))
;
maxcol_mean <- function(N) mean(apply(N,2,function(x) max(x[!is.na])))
maxcol_mean
?matrix
Z <- c(1,3,1,2.4,50,2,3,NA,15,3.8,NA,20,10,0,9,5,0,NA,4.1,10)
ls
ls()
;
Z
M1 <- matrix(Z,4,5)
M1
M1 <- matrix(Z,4,5, byrow=TRUE)
M1
ls()
maxcol_mean(M1)
maxcol_mean(M)
maxcol <- function(N) apply(N,2,function(x) max(x[!is.na]))
maxcol(M)
apply(M,2,function(x) max(x[!is.na]))
apply(M,2,function(x) max(x[!is.na(x)]))
maxcol <- function(N) apply(N,2,function(x) max(x[!is.na(x)]))
maxcol(M)
M
M1
maxcol(M1)
maxcol_mean <- function(N) mean(apply(N,2,function(x) max(x[!is.na(x)])))
maxcol_mean(M1)
?options
getOptions
getOptions()
getOption()
getOption('digits')
options(digits=4)
getOption('digits')
getOption('scipen')
options(digits = 5)
print(1e5)
options(scipen = 3); print(1e5)
getOption('max.print')
V <- c(245, 222, 580, 320, 69, 12, 10, 8, 33, 15, 25, 989, 63, 22, 296, 333);
print("Range")
class(V)
str(V)
v <- vector(245, 222, 580, 320, 69, 12, 10, 8, 33, 15, 25, 989, 63, 22, 296, 333)
v <- vector()
class(v)
M <- matrix(V,4,4);
class(M)
length(V)
load(url("http://assets.datacamp.com/course/dasi/ames.RData"));
unique(ames$"Yr.Sold")
count(unique(ames$"Yr.Sold"))
y <- unique(ames$"Yr.Sold")
y
str(y)
dim(y)
length(y)
paste("Number or rows in ames data frame: "), nrow(ames))
?paste
paste("Number or rows in ames data frame: ", nrow(ames))
?round
price <- ames$SalePrice;
mean(price)
sd(price)
round(sd(price),2)
round(mean(price),2)
signif(mean(price),2)
signif(mean(price),6)
signif(mean(price),8)
?format
install.packages(c("car", "codetools", "colorspace", "evaluate", "forecast", "formatR", "Formula", "gbm", "ggplot2", "gtools", "highr", "jsonlite", "manipulate", "MASS", "Matrix", "mgcv", "mime", "RANN", "Rcpp", "RcppArmadillo", "RcppEigen", "roxygen2", "rstudioapi", "tseries", "zoo"))
install.packages("devtools")
install.packages("shiny")
library(shiny)
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
install.packages("knitr")
install.packages("ggmap")
install.packages("manipulate")
library(tm)
install.packages(c("boot", "class", "cluster", "codetools", "foreign", "KernSmooth", "lattice", "MASS", "Matrix", "nlme", "nnet", "rpart", "spatial", "survival"))
install.packages("ggplot2")
install.packages("tm")
install.packages("knitr")
install.packages("SweaveListingUtils")
install.packages("swirl")
install.packages("RWeka")
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_45')
library(rJava)
install.packages("tau")
install.packages("stringr")
install.packages("stringdist")
install.packages("stringdist")
install.packages("stringgaussnet")
library(stringi)
?"stringi"
?stringdist
library(stringdist)
?stringdist
?barplot
setwd("D:\\cursuri\\DataScienceCapstone\\DataScienceCapstone")
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
The shiny application is available at https://bancea.shinyapps.io/DataScienceCapstone
- Coursera natural language processing
[https://www.coursera.org/course/nlp]
